buildscript{
	ext{
		springBootVersion = '2.3.0.RELEASE'
	}
	repositories {
		mavenCentral()
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.3.0.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'war'
}

group = 'com.placesearch'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation('org.springframework.boot:spring-boot-starter-test')
//	{
//		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
//	}

	//sercurity
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testCompile('org.springframework.security:spring-security-test')

	//lombok
	implementation 'org.projectlombok:lombok'
	testCompile('org.projectlombok:lombok')
	annotationProcessor('org.projectlombok:lombok')
	testAnnotationProcessor('org.projectlombok:lombok')

	//jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//h2
	compile 'com.h2database:h2'

	//thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	//devtools
	implementation 'org.springframework.boot:spring-boot-devtools'

	implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.2'

}

test {
	useJUnitPlatform()
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	sourceCompatibility = 1.8

	repositories {
		mavenCentral()
	}

	dependencies {
		testCompile group: 'junit', name: 'junit', version: '4.12'

		//devtools
		implementation 'org.springframework.boot:spring-boot-devtools'

		//lombok
		implementation 'org.projectlombok:lombok'
		testCompile('org.projectlombok:lombok')
		annotationProcessor('org.projectlombok:lombok')
		testAnnotationProcessor('org.projectlombok:lombok')

	}
}
